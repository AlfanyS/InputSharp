namespace InputSharp.Parsers;

public static class ParsingDictionary
{
    public static readonly List<CharOnKeyboardDirect> RuLanguage = new()
    {
        // ('а', ScanKey.F, false),
        // ('б', ScanKey.COMMA, false),
        // ('в', ScanKey.D, false),
        // ('г', ScanKey.U, false),
        // ('д', ScanKey.L, false),
        // ('е', ScanKey.T, false),
        // ('ё', ScanKey.GRAVE, false),
        // ('ж', ScanKey.SEMICOLON, false),
        // ('з', ScanKey.P, false),
        // ('и', ScanKey.B, false),
        // ('й', ScanKey.Q, false),
        // ('к', ScanKey.R, false),
        // ('л', ScanKey.K, false),
        // ('м', ScanKey.V, false),
        // ('н', ScanKey.Y, false),
        // ('о', ScanKey.J, false),
        // ('п', ScanKey.G, false),
        // ('р', ScanKey.H, false),
        // ('с', ScanKey.C, false),
        // ('т', ScanKey.N, false),
        // ('у', ScanKey.E, false),
        // ('ф', ScanKey.A, false),
        // ('х', ScanKey.LBRACKET, false),
        // ('ц', ScanKey.W, false),
        // ('ч', ScanKey.X, false),
        // ('ш', ScanKey.I, false),
        // ('щ', ScanKey.O, false),
        // ('ъ', ScanKey.RBRACKET, false),
        // ('ы', ScanKey.S, false),
        // ('ь', ScanKey.M, false),
        // ('э', ScanKey.APOSTROPHE, false),
        // ('ю', ScanKey.PERIOD, false),
        // ('я', ScanKey.Z, false),
        // ('.', ScanKey.SLASH, false),
        // (',', ScanKey.SLASH, true),
        // ('"', ScanKey._2, true),
        // ('№', ScanKey.Three, true),
        // (';', ScanKey._4, true),
        // (' ', ScanKey.SPACE, false),
    };

    public static readonly List<CharOnKeyboardVirtual> VRuLanguage = new()
    {
        // ('а', VirtualKey.F, false),
        // //('б', VirtualKey.COMMA, false),
        // ('в', VirtualKey.D, false),
        // ('г', VirtualKey.U, false),
        // ('д', VirtualKey.L, false),
        // ('е', VirtualKey.T, false),
        // //('ё', VirtualKey., false),
        // //('ж', VirtualKey.SEMICOLON, false),
        // ('з', VirtualKey.P, false),
        // ('и', VirtualKey.B, false),
        // ('й', VirtualKey.Q, false),
        // ('к', VirtualKey.R, false),
        // ('л', VirtualKey.K, false),
        // ('м', VirtualKey.V, false),
        // ('н', VirtualKey.Y, false),
        // ('о', VirtualKey.J, false),
        // ('п', VirtualKey.G, false),
        // ('р', VirtualKey.H, false),
        // ('с', VirtualKey.C, false),
        // ('т', VirtualKey.N, false),
        // ('у', VirtualKey.E, false),
        // ('ф', VirtualKey.A, false),
        // //('х', VirtualKey.LBRACKET, false),
        // ('ц', VirtualKey.W, false),
        // ('ч', VirtualKey.X, false),
        // ('ш', VirtualKey.I, false),
        // ('щ', VirtualKey.O, false),
        // //('ъ', VirtualKey.RBRACKET, false),
        // ('ы', VirtualKey.S, false),
        // ('ь', VirtualKey.M, false),
        // //('э', VirtualKey.APOSTROPHE, false),
        // //('ю', VirtualKey.PERIOD, false),
        // ('я', VirtualKey.Z, false),
        // //('.', VirtualKey.SLASH, false),
        // //(',', VirtualKey.SLASH, true),
        // ('"', VirtualKey._2, true),
        // ('№', VirtualKey._3, true),
        // (';', VirtualKey._4, true),
        // (' ', VirtualKey.SPACE, false),
    };

    public static readonly List<CharOnKeyboardVirtual> VEnLanguage = new()
    {
        // ('a', VirtualKey.A, false),
        // ('b', VirtualKey.B, false),
        // ('c', VirtualKey.C, false),
        // ('d', VirtualKey.D, false),
        // ('e', VirtualKey.E, false),
        // ('f', VirtualKey.F, false),
        // ('g', VirtualKey.G, false),
        // ('h', VirtualKey.H, false),
        // ('i', VirtualKey.I, false),
        // ('j', VirtualKey.J, false),
        // ('k', VirtualKey.K, false),
        // ('l', VirtualKey.L, false),
        // ('m', VirtualKey.M, false),
        // ('n', VirtualKey.N, false),
        // ('o', VirtualKey.O, false),
        // ('p', VirtualKey.P, false),
        // ('q', VirtualKey.Q, false),
        // ('r', VirtualKey.R, false),
        // ('s', VirtualKey.S, false),
        // ('t', VirtualKey.T, false),
        // ('u', VirtualKey.U, false),
        // ('v', VirtualKey.V, false),
        // ('w', VirtualKey.W, false),
        // ('x', VirtualKey.X, false),
        // ('y', VirtualKey.Y, false),
        // ('z', VirtualKey.Z, false),
        //
        // //('\'',VirtualKey.APOSTROPHE, false),
        // //('.', VirtualKey.PERIOD, false),
        // //('[', VirtualKey.LBRACKET, false),
        // //(']', VirtualKey.RBRACKET, false),
        // //('/', VirtualKey.SLASH, false),
        // //('?', VirtualKey.SLASH, true),
        // //('`', VirtualKey.GRAVE, false),
        // //(';', VirtualKey.SEMICOLON, false),
        // //(',', VirtualKey.COMMA, false),
        // //('@', VirtualKey._2, true),
        // //('"', VirtualKey.APOSTROPHE, true),
        // ('#', VirtualKey._3, true),
        // ('$', VirtualKey._4, true),
        // (' ', VirtualKey.SPACE, false),
    };

    public static readonly List<CharOnKeyboardDirect> EnLanguage = new()
    {
        // ('a', ScanKey.A, false),
        // ('b', ScanKey.B, false),
        // ('c', ScanKey.C, false),
        // ('d', ScanKey.D, false),
        // ('e', ScanKey.E, false),
        // ('f', ScanKey.F, false),
        // ('g', ScanKey.G, false),
        // ('h', ScanKey.H, false),
        // ('i', ScanKey.I, false),
        // ('j', ScanKey.J, false),
        // ('k', ScanKey.K, false),
        // ('l', ScanKey.L, false),
        // ('m', ScanKey.M, false),
        // ('n', ScanKey.N, false),
        // ('o', ScanKey.O, false),
        // ('p', ScanKey.P, false),
        // ('q', ScanKey.Q, false),
        // ('r', ScanKey.R, false),
        // ('s', ScanKey.S, false),
        // ('t', ScanKey.T, false),
        // ('u', ScanKey.U, false),
        // ('v', ScanKey.V, false),
        // ('w', ScanKey.W, false),
        // ('x', ScanKey.X, false),
        // ('y', ScanKey.Y, false),
        // ('z', ScanKey.Z, false),
        //
        // ('\'', ScanKey.APOSTROPHE, false),
        // ('.', ScanKey.PERIOD, false),
        // ('[', ScanKey.LBRACKET, false),
        // (']', ScanKey.RBRACKET, false),
        // ('/', ScanKey.SLASH, false),
        // ('?', ScanKey.SLASH, true),
        // ('`', ScanKey.GRAVE, false),
        // (';', ScanKey.SEMICOLON, false),
        // (',', ScanKey.COMMA, false),
        // ('@', ScanKey._2, true),
        // ('"', ScanKey.APOSTROPHE, true),
        // ('#', ScanKey.Three, true),
        // ('$', ScanKey._4, true),
        // (' ', ScanKey.SPACE, false),
    };
}